name: Overframe — Pages & Chunks

on:
  schedule:
    - cron: "17 3 * * *"    # scrape pages (quotidien)
    - cron: "13 4 * * 1"    # extract chunks (hebdo)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  pages_scrape:
    name: Scrape pages (items/arsenal)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build page scraper
        working-directory: overframe-scraper
        run: go build -o scraper

      # --- One-shot complet ---
      # Si tu préfères l'incrémental, retire END_ID et ajoute GROWTH_WINDOW (ex: 300)
      - name: Run page scraper (polite one-shot)
        working-directory: overframe-scraper
        env:
          BASE_URL: "https://overframe.gg/items/arsenal/%d"
          START_ID: "1"
          END_ID: "7468"        # <- requis pour one-shot
          RATE_MS: "1000"       # délai de base (ms)
          JITTER_MS: "200"      # jitter anti-burst (ms)
        run: ./scraper

      - name: Prepare data dir
        run: mkdir -p data/overframe

      - name: Copy small outputs (commit) + zip raw (artifact)
        shell: bash
        run: |
          set -e
          cp overframe-scraper/items.json data/overframe/OF_items.json
          cp overframe-scraper/items.csv  data/overframe/OF_items.csv
          cp overframe-scraper/index.csv  data/overframe/OF_index.csv
          (cd overframe-scraper && zip -r ../overframe-raw-json.zip raw || true)
          echo "Preview data/overframe:"
          ls -la data/overframe || true

      - name: Commit page outputs if changed
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add data/overframe/OF_items.json data/overframe/OF_items.csv data/overframe/OF_index.csv
            if ! git diff --cached --quiet; then
              git commit -m "chore(scrape): update items/index (no raw in git)"
              git push
            else
              echo "No changes to commit for page outputs."
            fi
          else
            echo "Working tree clean (pages)."
          fi

      - name: Upload RAW artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: overframe-raw-json
          path: overframe-raw-json.zip

  chunk_extract:
    name: Extract Next.js DB chunks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build chunk extractor
        working-directory: overframe-scraper/chunks
        run: go build -o overframe-chunks

      # -auto=true = autodécouverte des URLs hashées depuis la homepage
      # Si tu veux forcer tes URLs fixes, commente ce step et décommente le suivant.
      - name: Run extractor (auto-discovery)
        working-directory: overframe-scraper/chunks
        env:
          OUT: "../../data/overframe"
        run: ./overframe-chunks -auto=true -out "$OUT" -timeout=25s -retries=3 -sleep=600ms

      # --- Alternative : forcer les URLs fixes ---
      # - name: Run extractor (forced URLs)
      #   working-directory: overframe-scraper/chunks
      #   env:
      #     OUT: "../../data/overframe"
      #   run: ./overframe-chunks -auto=false -out "$OUT" -timeout=25s -retries=3 -sleep=600ms

      - name: Post-extract sanity check
        run: |
          echo "Listing generated files in data/overframe:"
          ls -la data/overframe || true

      - name: Commit chunk JSON if changed
        shell: bash
        run: |
          set -e
          echo "Commit overframe-*.json if present…"
          shopt -s nullglob
          files=(data/overframe/overframe-*.json)
          if (( ${#files[@]} )); then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "${files[@]}"
            if ! git diff --cached --quiet; then
              git commit -m "chore(chunks): refresh Overframe DB JSON"
              git push
            else
              echo "No changes to commit for chunk JSON."
            fi
          else
            echo "No overframe-*.json produced; skipping commit."
          fi
