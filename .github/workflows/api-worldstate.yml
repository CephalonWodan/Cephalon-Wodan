name: API – Worldstate

on:
  schedule:
    - cron: "*/5 * * * *"       # toutes les 5 minutes
  workflow_dispatch:

permissions:
  contents: write               # nécessaire pour git push

concurrency:
  group: api-worldstate
  cancel-in-progress: false

jobs:
  fetch:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Prepare folders
        run: |
          set -e
          mkdir -p api/v1/worldstate/{pc,ps4,xb1,swi}

      - name: Download snapshots (pc/ps4/xb1/swi · en/fr) with logs
  shell: bash
  run: |
    set -euo pipefail
    UA="wf-hub/1.0 (+github.com/Cephalon-Wodan/Cephalon-Wodan)"
    wrote=0

    for lang in en fr; do
      for plat in pc ps4 xb1 swi; do
        url="https://api.warframestat.us/${plat}?language=${lang}"
        dest="api/v1/worldstate/${plat}/${lang}.json"
        tmp="${dest}.tmp"
        echo "→ GET $url"

        code=$(curl -L \
                 -H "User-Agent: $UA" \
                 -H "Accept: application/json" \
                 --retry 5 --retry-delay 3 --retry-all-errors \
                 -w "%{http_code}" -sS -o "$tmp" "$url" || true)
        echo "  HTTP $code"

        if [[ "$code" =~ ^2 ]]; then
          # JSON compact + validation
          if jq -e -c . "$tmp" > "$dest"; then
            sz=$(wc -c < "$dest")
            echo "  ✓ wrote $dest ($sz bytes)"
            wrote=$((wrote+1))
          else
            echo "  ✗ jq validation failed for $url"
          fi
        else
          echo "  ✗ download failed for $url"
        fi
        rm -f "$tmp" || true
      done
    done

    echo "================ Summary ================"
    ls -lh api/v1/worldstate/*/*.json 2>/dev/null || true
    echo "Files written: $wrote"

    # ⚠️ Ne pas faire échouer le workflow si tous les fetchs ont raté.
    # On log juste un warning : la page affichera "Snapshot vide".
    if [ "$wrote" -eq 0 ]; then
      echo "::warning::No snapshot written (rate limit / network). Keeping previous files."
    fi
      - name: Commit & push changes
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A api/v1/worldstate || true
          if git diff --cached --quiet; then
            echo "Nothing to commit."
            exit 0
          fi
          git commit -m "worldstate: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git pull --rebase || true
          git push
