import { Dependency } from "./Dependency-DkOHLql6.js";
import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { ContentTimestamp } from "warframe-worldstate-data/utilities";

//#region lib/models/Fissure.d.ts
interface RawFissure extends BaseContentObject {
  Node: string;
  MissionType: string;
  Modifier: string;
  ActiveMissionTier: string;
  Activation: ContentTimestamp;
  Expiry: ContentTimestamp;
  Hard?: boolean;
}
/**
 * Represents a fissure mission
 * @augments {WorldstateObject}
 */
declare class Fissure extends WorldstateObject {
  /**
   * The node where the fissure has appeared
   */
  node: string;
  /**
   * The fissure mission type
   */
  missionType: string;
  /**
   * The fissure mission type key
   */
  missionTypeKey: string;
  /**
   * The faction controlling the node where the fissure has appeared
   */
  enemy: string;
  /**
   * Faction enum for the faction controlling the node where the fissure has appeared
   */
  enemyKey: string;
  /**
   * The node key where the fissure has appeared
   */
  nodeKey: string;
  /**
   * The fissure's tier
   */
  tier: string;
  /**
   * The fissure's tier as a number
   */
  tierNum: string | number;
  /**
   * Whether this fissure corresponds to a RailJack Void Storm
   */
  isStorm: boolean;
  /**
   * Whether this fissure is a Steel Path fissure
   */
  isHard: boolean;
  /**
   * @param   {object}             data            The fissure data
   * @param   {Dependency}             deps            The dependencies object
   * @param   {string}             deps.locale     Locale to use for translations
   */
  constructor(data: RawFissure, {
    locale
  }?: Dependency);
  /**
   * Whether this is expired (at time of object creation)
   */
  get expired(): boolean;
  /**
   * ETA string (at time of object creation)
   */
  get eta(): string;
}
//#endregion
export { Fissure, RawFissure };