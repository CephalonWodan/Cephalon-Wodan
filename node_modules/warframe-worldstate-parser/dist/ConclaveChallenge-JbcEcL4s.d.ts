import { Dependency } from "./Dependency-DkOHLql6.js";
import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { ContentTimestamp } from "warframe-worldstate-data/utilities";

//#region lib/models/ConclaveChallenge.d.ts
interface RawChallenge extends BaseContentObject {
  endDate: ContentTimestamp;
  startDate: ContentTimestamp;
  params: {
    n: string;
    v: number;
  }[];
  PVPMode: string;
  Category: string;
  challengeTypeRefID: string;
}
/**
 * Represents a Conclave challenge
 * @augments {WorldstateObject}
 */
declare class ConclaveChallenge extends WorldstateObject {
  /**
   * The number of times that the challenge's objective needs to be completed
   */
  amount: number;
  /**
   * The PVP mode that the challenge must be completed in
   */
  mode: string;
  /**
   * The challenge's category (daily, weekly...)
   */
  category: string;
  /**
   * The challenge category unlocalized
   */
  categoryKey: string;
  /**
   * The challenge's description text
   */
  description?: string;
  /**
   * Title of the challenge
   */
  title?: string;
  /**
   * Standing granted by completing challenge.
   */
  standing?: number;
  /**
   * Whether or not this is a daily conclave challenge.
   */
  daily: boolean;
  /**
   * Whether or not this is the root challenge
   */
  rootChallenge: boolean;
  /**
   * @param   {object}             data            The challenge data
   * @param   {object}             deps            The dependencies object
   * @param   {string}             deps.locale     Locale to use for translations
   */
  constructor(data: RawChallenge, {
    locale
  }?: Dependency);
  /**
   * Whether or not this is expired (at time of object creation)
   */
  get expired(): boolean;
  /**
   * ETA string (at time of object creation)
   */
  get eta(): string;
}
//#endregion
export { ConclaveChallenge, RawChallenge };