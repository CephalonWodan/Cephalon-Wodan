import { Dependency } from "./Dependency-DkOHLql6.js";
import { Mission, RawMission } from "./Mission-CWE16ouO.js";
import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { DarkSectorBattle, RawDarkSectorBattle } from "./DarkSectorBattle-DY33Bfuq.js";
import { ContentTimestamp } from "warframe-worldstate-data/utilities";

//#region lib/models/DarkSector.d.ts
interface DefenderInfo {
  CreditsTaxRate: number;
  MemberCreditsTax: number;
  ItemsTaxRate: number;
  MemberItemsTaxRate: number;
  IsAlliance: boolean;
  Name: string;
  StrengthRemaining: string;
  MaxStrength: string;
  DeploymentActivationTime: ContentTimestamp;
  RailType: string;
  MOTD: string;
  DeployerName: string;
  DeployerClan: string;
  RailHealReserve: number;
  healRate: string;
  DamagePerMission: number;
  MissionInfo?: RawMission;
  BattlePayReserve: number;
  MissionBattlePay: number;
  BattlePaySetBy: string;
  BattlePaySetByClan: string;
  TaxLastChangedBy: string;
  TaxLastChangedByClan: string;
}
interface RawDarkSector extends BaseContentObject {
  DefenderInfo: DefenderInfo;
  History: RawDarkSectorBattle[];
}
/**
 * Represents a dark sector
 * @augments {WorldstateObject}
 */
declare class DarkSector extends WorldstateObject {
  /**
   * The dark sector credit tax rate
   */
  creditTaxRate: number;
  /**
   * The dark sector credit tax rate for clan/alliance members
   */
  memberCreditsTaxRate: number;
  /**
   * The dark sector resource tax rate
   */
  itemsTaxRate: number;
  /**
   * The dark sector resource tax rate for clan/alliance members
   */
  memberItemsTaxRate: number;
  /**
   * Whether the dark sector holder is an alliance or not
   */
  isAlliance: boolean;
  /**
   * The current holder of the dark sector
   */
  defenderName: string;
  /**
   * The remaining health of the current solar rail
   */
  defenderPoolRemaining: number;
  /**
   * The maximum health of the solar rail
   */
  defenderMaxPool: number;
  /**
   * The date and time at which the rail was deployed
   */
  defenderDeployemntActivation: number | Date;
  /**
   * The solar rail type
   */
  railType: string;
  /**
   * The MOTD set by the dark sector holder
   */
  defenderMOTD: string;
  /**
   * The player who deployed the solar rail
   */
  deployerName: string;
  /**
   * The clan of the player who deployed the solar rail
   */
  deployerClan: string;
  defenderRailHealReserve: number;
  healRate: number;
  damagePerMission: number;
  /**
   * The dark sector's mission
   */
  mission?: Mission;
  battlePayReserve: number;
  /**
   * The battle pay per mission offered to players
   * @type {number}
   */
  perMissionBattlePay: number;
  /**
   * The player who set the battle pay
   * @type {string}
   */
  battlePaySetBy: string;
  /**
   * The clan of the player who set the battle pay
   * @type {string}
   */
  battlePaySetByClan: string;
  /**
   * The player who changed the tax
   * @type {string}
   */
  taxChangedBy: string;
  /**
   * The clan of the player who set the tax
   * @type {string}
   */
  taxChangedByClan: string;
  /**
   * The history of the dark sector
   * @type {Array.<DarkSectorBattle>}
   */
  history: DarkSectorBattle[];
  /**
   * @param   {object}             data                  The dark sector data
   * @param   {object}             deps                  The dependencies object
   * @param   {string}             deps.locale           Locale to use for translations
   */
  constructor(data: RawDarkSector, {
    locale
  }?: Dependency);
}
//#endregion
export { DarkSector, RawDarkSector };