import { fromNow, insist, parseDate, timeDeltaToString } from "warframe-worldstate-data/utilities";

//#region lib/models/WorldstateObject.ts
/**
* Represents a generic object from Worldstate
*/
var WorldstateObject = class {
	/**
	* The object's id field
	*/
	id;
	/**
	* The date and time at which the WorldstateObject started
	*/
	activation;
	/**
	* The date and time at which the WorldstateObject ends
	*/
	expiry;
	/**
	* @param data The object data
	*/
	constructor(data) {
		insist({ ...data });
		this.id = data._id ? data._id.$oid || data._id.$id : void 0;
		if (data.Activation) this.activation = parseDate(data.Activation);
		if (data.Expiry) this.expiry = parseDate(data.Expiry);
	}
	/**
	* Whether the void trader is active (at time of object creation)
	*/
	get active() {
		if (!this.activation && !this.expiry) return false;
		return fromNow(this.activation) < 0 && fromNow(this.expiry) > 0;
	}
	/**
	* A string indicating how long it will take for the trader to arrive
	*  (at time of object creation)
	*/
	get startString() {
		if (!this.activation) return void 0;
		return timeDeltaToString(fromNow(this.activation));
	}
	/**
	* Time delta string from now to the end
	*/
	get endString() {
		if (!this.expiry) return void 0;
		return timeDeltaToString(fromNow(this.expiry));
	}
};

//#endregion
export { WorldstateObject };