import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";

//#region lib/models/Calendar.d.ts
interface RawCalender extends BaseContentObject {
  Days: {
    day: number;
    events: RawDay[];
  }[];
  Season: string;
  YearIteration: number;
  Version: number;
  UpgradeAvaliabilityRequirements: string[];
}
interface RawDay {
  type: string;
  challenge?: string;
  upgrade?: string;
  reward?: string;
  dialogueName?: string;
  dialogueConvo?: string;
}
/**
 * Event data for a 1999 calendar day
 */
declare class DayEvent {
  type: string;
  challenge?: {
    title: string;
    description: string;
  };
  upgrade?: {
    title: string;
    description: string;
  };
  reward?: string;
  dialogueName?: string;
  dialogueConvo?: string;
  /**
   * @param event raw event data
   */
  constructor(event: RawDay);
  private eventDescription;
}
declare class Calendar extends WorldstateObject {
  /**
   * Rewards, Challenges, and Calender events
   */
  days: {
    date: string;
    events: DayEvent[];
  }[];
  /**
   * Current Calender Season
   */
  season: string;
  /**
   * Current loop number
   */
  yearIteration: number;
  /**
   * Version
   */
  version: number;
  /**
   * Player requirements needed to view this calender
   */
  requirements: string[];
  /**
   * @param calendar RawCalender data to parse from
   */
  constructor(calendar: RawCalender);
  /**
   * Converts number of day to a date in 1999 in UTC
   */
  private getDate;
}
//#endregion
export { Calendar, DayEvent, RawCalender, RawDay };