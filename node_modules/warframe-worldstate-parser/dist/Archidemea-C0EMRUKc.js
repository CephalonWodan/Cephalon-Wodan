import { createHash } from "node:crypto";
import { languageDesc, languageString, weeklyReset } from "warframe-worldstate-data/utilities";

//#region lib/models/Archidemea.ts
var ArchidemeaMission = class {
	mission;
	deviation;
	riskVariables;
	/**
	* @param mission   Challenge mission type
	* @param deviation Mission deviation
	* @param risks     Mission risks
	* @param locale    Locale to tranlslate to
	*/
	constructor(mission, deviation, risks, locale) {
		this.mission = mission;
		this.deviation = {
			key: deviation,
			name: languageString(deviation, locale),
			description: languageDesc(deviation, locale)
		};
		this.riskVariables = risks.map((i) => {
			return {
				key: i,
				name: languageString(i, locale),
				description: languageDesc(i, locale)
			};
		});
	}
};
var Archimedea = class {
	id;
	activation;
	expiry;
	missions;
	personalModifiers;
	/**
	*
	* @param activation Start timestamp
	* @param expiry     End timestamp
	* @param data       Data to parse
	* @param locale     Locale to translate to
	*/
	constructor(data, locale = "en") {
		({activation: this.activation, expiry: this.expiry} = weeklyReset());
		this.id = createHash("md5").update(JSON.stringify(data), "utf8").digest("hex");
		this.missions = data.mt.map((m, i) => new ArchidemeaMission(m, data.mv[i], data.c[i], locale));
		this.personalModifiers = data.fv.map((i) => {
			return {
				key: i,
				name: languageString(i, locale),
				description: languageDesc(i, locale)
			};
		});
	}
};

//#endregion
export { Archimedea };