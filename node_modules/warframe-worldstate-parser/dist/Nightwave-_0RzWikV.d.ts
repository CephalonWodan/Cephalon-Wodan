import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { NightwaveChallenge, RawNightwaveChallenge } from "./NightwaveChallenge-DDdrqvge.js";
import { Locale } from "warframe-worldstate-data";

//#region lib/models/Nightwave.d.ts
interface RawNightwave extends BaseContentObject {
  Season: number;
  AffiliationTag: string;
  Phase: number;
  Params: string;
  Challenges?: RawNightwaveChallenge[];
  ActiveChallenges: RawNightwaveChallenge[];
}
/**
 * Represents an alert
 * @augments {WorldstateObject}
 */
declare class Nightwave extends WorldstateObject {
  /**
   * The current season. 0-indexed.
   */
  season: number;
  /**
   * Descriptor for affiliation
   */
  tag: string;
  /**
   * The current season's current phase. 0-indexed.
   */
  phase: number;
  /**
   * Misc params provided.
   */
  params: Record<string, unknown>;
  /**
   * Array of possible challenges
   */
  possibleChallenges: NightwaveChallenge[];
  /**
   * Array of active challenges
   */
  activeChallenges: NightwaveChallenge[];
  /**
   * @param data        The alert data
   * @param deps        The dependencies object
   * @param deps.locale Locale to use for translations
   */
  constructor(data: RawNightwave, {
    locale
  }?: {
    locale: Locale;
  });
  /**
   * How much time is left before the nightwave expires
   */
  get eta(): string;
}
//#endregion
export { Nightwave, RawNightwave };