import { Dependency } from "./Dependency-DkOHLql6.js";
import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { RawSyndicateJob, SyndicateJob } from "./SyndicateJob-DOtXWjRF.js";

//#region lib/models/SyndicateMission.d.ts
interface RawSyndicateMission extends BaseContentObject {
  Tag: string;
  Nodes: string[];
  Jobs: RawSyndicateJob[];
}
/**
 * Represents a syndicate daily mission
 * @augments {WorldstateObject}
 */
declare class SyndicateMission extends WorldstateObject {
  /**
   * The syndicate that is offering the mission
   * @type {string}
   */
  syndicate: string;
  /**
   * The syndicate that is offering the mission
   * @type {string}
   */
  syndicateKey: string;
  /**
   * The nodes on which the missions are taking place
   * @type {Array.<string>}
   */
  nodes: string[];
  /**
   * The jobs for this syndicate. Will normally be []
   * @type {Array.<SyndicateJob>}
   */
  jobs: SyndicateJob[];
  /**
   * Build a new SyndicateMission with async operations & data
   * @param   data        The syndicate mission data
   * @param   deps        The dependencies object
   * @param   deps.locale Locale to use for translations
   * @returns SyndicateMission object w/ async resolution of jobs
   */
  static build(data: RawSyndicateMission, deps?: Dependency): Promise<SyndicateMission>;
  /**
   * @param data        The syndicate mission data
   * @param deps        The dependencies object
   * @param deps.locale Locale to use for translations
   */
  constructor(data: RawSyndicateMission, {
    locale
  }?: Dependency);
  /**
   * Time delta string from now to the expiry
   */
  get eta(): string;
}
//#endregion
export { RawSyndicateMission, SyndicateMission };