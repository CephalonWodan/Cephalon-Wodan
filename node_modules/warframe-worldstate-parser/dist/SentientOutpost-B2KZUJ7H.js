import { node, nodeEnemy, nodeMissionType } from "warframe-worldstate-data/utilities";

//#region lib/models/SentientOutpost.ts
const duration = 1800;
const sat = () => {
	const now = Math.floor(Date.now() / 1e3);
	const cycleSeconds = now % duration;
	const active = cycleSeconds > 0 && cycleSeconds < 1800;
	const start = (now - cycleSeconds) * 1e3;
	const end = (now - cycleSeconds + duration) * 1e3;
	return {
		active,
		expiry: new Date(end),
		activation: new Date(start)
	};
};
/**
* Represents a set of sentient outposts that are present
* Parsed source is combined data from DE's worldstate and semlar.com/anomaly.json
*/
var SentientOutpost = class {
	node;
	id;
	/**
	* Start time
	*/
	activation;
	/**
	* End time
	*/
	expiry;
	/**
	* Current Mission
	*/
	mission;
	/**
	* Whether or not the object was active during creation
	*/
	active;
	/**
	* @param sfn  Sentient outpost node number
	* @param deps Dependencies
	*/
	constructor(sfn, { locale, sentientData, logger }) {
		this.node = sfn || "000";
		const id = `CrewBattleNode${this.node}`;
		if (this.node === "000") this.mission = void 0;
		else this.mission = {
			node: node(id, locale),
			faction: nodeEnemy(id, locale),
			type: nodeMissionType(id, locale)
		};
		({activation: this.activation, expiry: this.expiry} = sat());
		this.active = Boolean(this.mission);
		this.id = `${id}:${this.active}`;
		if (!sentientData) logger?.debug("No outpost data, skipping");
		else {
			this.activation = /* @__PURE__ */ new Date(sentientData.start * 1e3);
			this.expiry = /* @__PURE__ */ new Date(sentientData.end * 1e3);
		}
	}
};

//#endregion
export { SentientOutpost };