import { Dependency } from "./Dependency-DkOHLql6.js";
import { Mission, RawMission } from "./Mission-CWE16ouO.js";
import { BaseContentObject, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";
import { RawSortieVariant, SortieVariant } from "./SortieVariant-BFkYiBho.js";

//#region lib/models/Sortie.d.ts
interface RawSortie extends BaseContentObject {
  Reward: string;
  Variants?: RawSortieVariant[];
  Missions?: RawMission[];
  Boss: string;
}
/**
 * Represents a daily sortie
 * @augments {WorldstateObject}
 */
declare class Sortie extends WorldstateObject {
  /**
   * The sortie's reward pool
   */
  rewardPool: string;
  /**
   * The sortie's variants
   */
  variants: SortieVariant[];
  /**
   * Archon hunt missions if sortie is an archon hunt
   */
  missions: Mission[];
  /**
   * The sortie's boss
   */
  boss: string;
  /**
   * The sortie's faction
   */
  faction: string;
  /**
   * The sortie's faction
   */
  factionKey: string;
  /**
   * @param data        The data for all daily sorties
   * @param deps        The dependencies object
   * @param deps.locale Locale to use for translations
   */
  constructor(data: RawSortie, {
    locale
  }?: Dependency);
  /**
   * ETA string (at time of object creation)
   */
  get eta(): string;
  /**
   * Whether this is expired (at time of object creation)
   */
  get expired(): boolean;
}
//#endregion
export { RawSortie, Sortie };