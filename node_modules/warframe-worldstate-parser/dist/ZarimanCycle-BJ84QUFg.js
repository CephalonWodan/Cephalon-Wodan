import { WorldstateObject } from "./WorldstateObject-BSTYuZwm.js";
import { fromNow, timeDeltaToString } from "warframe-worldstate-data/utilities";

//#region lib/models/ZarimanCycle.ts
const corpusTimeMillis = 16551828e5;
const fullCycle = 18e6;
const stateMaximum = 9e6;
/**
* Represents the current Zariman Corpus/Grineer Cycle
* @augments {WorldstateObject}
*/
var ZarimanCycle = class extends WorldstateObject {
	/**
	* Whether or not this it's corpus or grineer
	*/
	isCorpus;
	/**
	* Current cycle state. One of `corpus`, `grineer`
	*/
	state;
	/**
	* Time remaining string
	*/
	timeLeft;
	/**
	* The current zariman cycle, for calculating the other fields
	*/
	#ec;
	/**
	* The end of the Zariman bounties timer, the faction changes exactly half way through
	*/
	#bountiesEndDate;
	/**
	* @param {Date} bountiesEndDate The current Zariman cycle expiry
	*/
	constructor(bountiesEndDate) {
		super({ _id: { $oid: "zarimanCycle0" } });
		this.#bountiesEndDate = bountiesEndDate;
		this.#ec = this.getCurrentZarimanCycle();
		this.expiry = this.#ec.expiry;
		this.activation = new Date(this.#ec.start);
		this.isCorpus = this.#ec.isCorpus;
		this.state = this.#ec.state;
		this.timeLeft = this.#ec.timeLeft;
		this.id = `zarimanCycle${this.expiry.getTime()}`;
	}
	/**
	* Whether this is expired
	*/
	get expired() {
		return this.expiry ? fromNow(this.expiry) < 0 : true;
	}
	getCurrentZarimanCycle() {
		const now = Date.now();
		const bountiesClone = this.#bountiesEndDate.getTime() - 5e3;
		const millisLeft = fromNow(new Date(bountiesClone));
		const cycleTimeElapsed = ((bountiesClone - corpusTimeMillis) % fullCycle + fullCycle) % fullCycle;
		const cycleTimeLeft = fullCycle - cycleTimeElapsed;
		const isCorpus = cycleTimeLeft > stateMaximum;
		const minutesCoef = 1e3 * 60;
		const expiry = new Date(Math.round((now + millisLeft) / minutesCoef) * minutesCoef);
		const state = isCorpus ? "corpus" : "grineer";
		return {
			isCorpus,
			timeLeft: timeDeltaToString(millisLeft),
			expiry,
			expiresIn: millisLeft,
			state,
			start: expiry.getTime() - stateMaximum
		};
	}
	/**
	* The event's string representation
	*/
	get shortString() {
		return `${this.timeLeft.replace(/\s\d*s/gi, "")} to ${this.isCorpus ? "grineer" : "corpus"}`;
	}
};

//#endregion
export { ZarimanCycle };