import { Dependency } from "./Dependency-DkOHLql6.js";
import { Identifier, WorldstateObject } from "./WorldstateObject-wfRTeGpm.js";

//#region lib/models/SyndicateJob.d.ts
interface RawSyndicateJob {
  rewards: string;
  isVault?: boolean;
  JobCurrentVersion?: Identifier;
  jobType?: string;
  locationTag?: string;
  minEnemyLevel: number;
  maxEnemyLevel: number;
  xpAmounts: number[];
  masteryReq?: number;
}
/**
 * Represents a syndicate daily mission
 * @augments {WorldstateObject}
 */
declare class SyndicateJob extends WorldstateObject {
  /**
   * Array of strings describing rewards
   */
  rewardPool: string[];
  /**
   * The type of job this is
   */
  type?: string;
  /**
   * Array of enemy levels
   */
  enemyLevels: number[];
  /**
   * Array of standing gains per stage of job
   */
  standingStages: number[];
  /**
   * Minimum mastery required to participate
   */
  minMR: number;
  /**
   * Whether or not this is a Vault job.
   * No indication for difference of normal vs arcana vaults.
   */
  isVault?: boolean;
  /**
   * Corresponding chamber. Nullable
   */
  locationTag?: string;
  /**
   * What time phase this bounty is bound to
   */
  timeBound: string | undefined;
  /**
   * Generate a job with async data (reward pool)
   * @param data   The syndicate mission data
   * @param expiry The syndicate job expiration
   * @param deps   The dependencies object
   * @returns The created SyndicateJob object with rewardPool
   */
  static build(data: RawSyndicateJob, expiry: Date, deps: Dependency): Promise<SyndicateJob>;
  /**
   * Construct a job without async data (reward pool)
   * @param data        The syndicate mission data
   * @param expiry      The syndicate job expiration
   * @param deps        The dependencies object
   * @param deps.locale Locale to use for translations
   *
   * This DOES NOT populate the reward pool
   */
  constructor(data: RawSyndicateJob, expiry: Date, {
    locale
  }?: Dependency);
}
//#endregion
export { RawSyndicateJob, SyndicateJob };